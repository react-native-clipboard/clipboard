--- # -------------------------

# -------------------------
#         ALIASES
aliases:
  # CACHE
  - &restore-gradle-cache
    keys:
      - gradle-cache-{{ checksum "android/build.gradle" }}-{{ checksum "example/android/build.gradle" }}-{{ checksum "example/android/app/build.gradle" }}
  - &save-gradle-cache
    paths:
      - ~/.gradle
    key: gradle-cache-{{ checksum "android/build.gradle" }}-{{ checksum "example/android/build.gradle" }}-{{ checksum "example/android/app/build.gradle" }}

  # ANALYSE
  - &eslint
    name: ESLint Checks
    command: yarn lint

  - &type-check
    name: TypeScript Checks
    command: yarn type-check

  - &flow
    name: Flow Checks
    command: yarn flow check

  - &jest
    name: Jest Unit Tests
    command: yarn test

# -------------------------
#          JOBS
# -------------------------
version: 2.1
orbs:
  rn: react-native-community/react-native@4.2.2

jobs:
  # Set up a Linux environment for downstream jobs
  linux-checkout:
    executor:
      name: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - checkout
      - rn/yarn_install
      - persist_to_workspace:
          root: .
          paths: .

  eslint:
    executor:
      name: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - run: *eslint

  type-check:
    executor:
      name: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - run: *type-check

  flow:
    executor:
      name: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - run: *flow

  jest:
    executor:
      name: rn/linux_js
    steps:
      - attach_workspace:
          at: .
      - run: *jest

  android-compile:
    executor: rn/linux_android
    steps:
      - attach_workspace:
          at: .
      - restore_cache: *restore-gradle-cache
      - run:
          name: Accept Android licences
          command: |-
            yes | sdkmanager --licenses || exit 0
            yes | sdkmanager --update || exit 0
      - run:
          name: Build Android Example App and Library
          command: |-
            cd example/android
            ./gradlew clean assembleDebug
      - save_cache: *save-gradle-cache

  ios-checkout:
    executor: rn/macos
    steps:
      - checkout
      - rn/yarn_install
      - persist_to_workspace:
          root: .
          paths: .

  ios-compile:
    executor: rn/macos
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Build example app
          command: |-
            react-native run-ios --project-path example/ios

# -------------------------
#        WORKFLOWS
# -------------------------
workflows:
  version: 2
  Test:
    jobs:
      - linux-checkout
      - eslint:
          requires:
            - linux-checkout
      - type-check:
          requires:
            - linux-checkout
      - flow:
          requires:
            - linux-checkout
      # - jest:
      #     requires:
      #     - linux-checkout
      - android-compile:
          requires:
            - linux-checkout
# Disabled until we have macOS containers enabled
#     - ios-checkout
#     - ios-compile:
#         requires:
#         - ios-checkout
